{"version":3,"sources":["../../../../src/openxml/docx/model/fieldBegin.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;8BAAsB,mBAAmB;;;;yBACxB,cAAc;;;;wBACf,aAAa;;;;4BACT,iBAAiB;;;;wBACrB,aAAa;;;;yBACZ,cAAc;;;;AAE/B,IAAI,MAAM,GAAC,EAAC,SAAS,6BAAA,EAAE,IAAI,wBAAA,EAAE,GAAG,uBAAA,EAAE,OAAO,2BAAA,EAAE,GAAG,uBAAA,EAAE,IAAI,wBAAA,EAAC,CAAA;;IAChC,UAAU;WAAV,UAAU;;AACnB,UADS,UAAU,GACjB;wBADO,UAAU;;AAE7B,6BAFmB,UAAU,8CAEpB,SAAS,EAAC;AACnB,MAAI,CAAC,QAAQ,GAAC,EAAE,CAAA;EAChB;;cAJmB,UAAU;;SAMzB,iBAAE;AACN,OAAI,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;AACvC,8BARmB,UAAU,wCAQd,SAAS,EAAC;GACzB;;;SACO,kBAAC,CAAC,EAAC;AACV,OAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;GACrB;;;SACO,kBAAC,SAAS,EAAC,EAElB;;;SACE,aAAC,WAAW,EAAC,EAEf;;;SACO,kBAAC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAC;AAC/B,OAAI,CAAC,GAAG,GAAC,UAAS,WAAW,EAAC;AAC7B,QAAI,KAAK,GAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,EAAE,EAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,CAAA;AACjF,QAAG,KAAK,EACP,KAAK,CAAC,KAAK,CAAC,QAAQ,EAAE,WAAW,CAAC,CAAA;IACnC,CAAA;GACD;;;SAIa,iBAAC,QAAQ,EAAE,IAAI,EAAE,OAAO,EAAC;AACtC,OAAI,KAAK,GAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC;OAC9B,IAAI,GAAC,KAAK,IAAE,CAAC,CAAC,GAAI,QAAQ,CAAC,SAAS,CAAC,CAAC,EAAC,KAAK,CAAC,GAAG,QAAQ,CAAA;AACzD,OAAI,GAAC,IAAI,CAAC,WAAW,EAAE,CAAA;AACvB,OAAG;AACF,WAAO,IAAK,MAAM,CAAC,IAAI,CAAC,CAAE,QAAQ,CAAC,IAAI,EAAE,EAAE,IAAI,EAAE,OAAO,CAAC,CAAA;IACzD,CAAA,OAAM,CAAC,EAAC;AACR,WAAO,CAAC,IAAI,oBAAkB,IAAI,oBAAiB,CAAA;IACnD;GACD;;;OAXc,eAAE;AAAC,UAAO,YAAY,CAAA;GAAC;;;QA3BlB,UAAU;GAAS,OAAO,CAAC,UAAU,CAAC;;qBAAtC,UAAU","file":"fieldBegin.js","sourcesContent":["import hyperlink from './field/hyperlink'\nimport date from './field/date'\nimport ref from './field/ref'\nimport pageref from './field/pageref'\nimport toc from './field/toc'\nimport page from './field/page'\n\nvar fields={hyperlink, date, ref, pageref, toc, page}\nexport default class fieldBegin extends require('../model'){\n\tconstructor(){\n\t\tsuper(...arguments)\n\t\tthis.commands=[]\n\t}\n\n\tparse(){\n\t\tthis.wDoc.parseContext.field.push(this)\n\t\tsuper.parse(...arguments)\n\t}\n\tinstruct(t){\n\t\tthis.commands.push(t)\n\t}\n\tseperate(seperator){\n\n\t}\n\tend(endVisitors){\n\n\t}\n\t_iterate(f, factories, visitors){\n\t\tthis.end=function(endVisitors){\n\t\t\tvar model=this.constructor.factory(this.commands.join('').trim(),this.wDoc, this)\n\t\t\tif(model)\n\t\t\t\tmodel.parse(visitors, endVisitors)\n\t\t}\n\t}\n\n\tstatic get type(){return 'fieldBegin'}\n\n\tstatic factory(instruct, wDoc, mParent){\n\t\tvar index=instruct.indexOf(' '),\n\t\t\ttype=index!=-1 ?  instruct.substring(0,index) : instruct\n\t\ttype=type.toLowerCase()\n\t\ttry{\n\t\t\treturn new (fields[type])(instruct.trim(), wDoc, mParent)\n\t\t}catch(e){\n\t\t\tconsole.warn(`field of type ${type} not supported`)\n\t\t}\n\t}\n}\n"]}