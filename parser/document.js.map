{"version":3,"sources":["../src/document.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;qBAKkB,OAAO;;;;IAEJ,QAAQ;AACjB,UADS,QAAQ,CAChB,KAAK,EAAC,GAAG,EAAC,KAAK,EAAC;wBADR,QAAQ;;AAE3B,MAAI,CAAC,KAAK,GAAC,KAAK,CAAA;AAChB,MAAI,CAAC,GAAG,GAAC,GAAG,CAAA;AACZ,MAAI,CAAC,KAAK,GAAC,KAAK,CAAA;EAChB;;cALmB,QAAQ;;SAMrB,iBAAC,IAAI,EAAC;AACZ,UAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;GACvB;;;SACW,sBAAC,IAAI,EAAC;AACjB,OAAI,IAAI,GAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAA;AACzB,OAAI,KAAK,GAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAA;AAC1B,OAAI,MAAM,GAAC,IAAI,CAAC,mBAAM,OAAO,CAAC,UAAU,GAAG,cAAc,GAAG,eAAe,CAAC,EAAE,CAAA;AAC9E,SAAM,CAAC,KAAK,GAAC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAC,KAAK,CAAA;AACnC,UAAO,MAAM,CAAA;GACb;;;SACI,iBAAE,EAEN;;;SACM,mBAAE,EAER;;;SACM,mBAAE;AACR,UAAO,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,EAAC,SAAS,CAAC,CAAA;GACrD;;;SAEU,cAAC,SAAS,EAAC;AACrB,OAAI,YAAY,GAAC,IAAI,CAAA;AACrB,UAAO,IAAI,OAAO,CAAC,UAAC,OAAO,EAAE,MAAM,EAAG;AACrC,aAAS,KAAK,CAAC,IAAI,EAAE,IAAI,EAAC;AACzB,SAAI,GAAG,GAAC,uBAAU,IAAI,CAAC;SAAC,KAAK,GAAC,EAAE,CAAA;AAChC,QAAG,CAAC,MAAM,CAAC,UAAS,IAAI,EAAC,IAAI,EAAC;AAC7B,WAAK,CAAC,IAAI,CAAC,GAAC,IAAI,CAAA;MAChB,CAAC,CAAA;AACF,YAAO,CAAC,IAAI,YAAY,CAAC,KAAK,EAAC,GAAG,EAAC;AAClC,UAAI,EAAC,IAAI;AACT,kBAAY,EAAC,SAAS,CAAC,YAAY;AACnC,UAAI,EAAC,SAAS,CAAC,IAAI;MACnB,CAAC,CAAC,CAAA;KACH;AACD,QAAG,OAAO,UAAU,IAAE,WAAW,EAAC;;AACjC,SAAI,MAAM,GAAC,IAAI,UAAU,EAAE,CAAC;AAC5B,WAAM,CAAC,MAAM,GAAC,UAAS,CAAC,EAAC;AAAC,WAAK,CAAC,CAAC,CAAC,MAAM,CAAC,MAAM,EAAE,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,UAAU,EAAC,EAAE,CAAC,CAAC,CAAA;MAAC,CAAA;AACxF,WAAM,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC;KACpC,MAAI;;AACJ,SAAI,CAAC,GAAC,OAAO,CAAC;AACd,MAAC,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,SAAS,EAAC,UAAS,KAAK,EAAE,IAAI,EAAC;AAC/C,UAAG,KAAK,EACP,MAAM,CAAC,KAAK,CAAC,CAAC,KACV,IAAG,IAAI,EAAC;AACZ,YAAK,CAAC,IAAI,EAAE,SAAS,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,GAAG,EAAE,CAAC,OAAO,CAAC,UAAU,EAAC,EAAE,CAAC,CAAC,CAAA;OACnE;MACD,CAAC,CAAA;KACF;IACD,CAAC,CAAA;GACF;;;OAEiB,eAAE;AAAC,UAAO,IAAI,CAAA;GAAC;;;QAzDb,QAAQ;;;qBAAR,QAAQ","file":"document.js","sourcesContent":["/**\n *  a type of document parser\n *  @class Document\n *  @requires module:JSZip\n */\nimport JSZip from 'jszip'\n\nexport default class Document{\n\tconstructor(parts,raw,props){\n\t\tthis.parts=parts\n\t\tthis.raw=raw\n\t\tthis.props=props\n\t}\n\tgetPart(name){\n\t\treturn this.parts[name]\n\t}\n\tgetImagePart(name){\n\t\tvar part=this.parts[name]\n\t\tvar crc32=part._data.crc32\n\t\tvar buffer=part[JSZip.support.nodebuffer ? 'asNodeBuffer' : 'asArrayBuffer']()\n\t\tbuffer.crc32=part._data.crc32=crc32\n\t\treturn buffer\n\t}\n\tparse(){\n\n\t}\n\trelease(){\n\n\t}\n\tfactory(){\n\t\treturn this.constructor.factory.apply(this,arguments)\n\t}\n\n\tstatic load(inputFile){\n\t\tvar DocumentSelf=this\n\t\treturn new Promise((resolve, reject)=>{\n\t\t\tfunction parse(data, name){\n\t\t\t\tvar raw=new JSZip(data),parts={}\n\t\t\t\traw.filter(function(path,file){\n\t\t\t\t\tparts[path]=file\n\t\t\t\t})\n\t\t\t\tresolve(new DocumentSelf(parts,raw,{\n\t\t\t\t\tname:name,\n\t\t\t\t\tlastModified:inputFile.lastModified,\n\t\t\t\t\tsize:inputFile.size\n\t\t\t\t}))\n\t\t\t}\n\t\t\tif(typeof FileReader!='undefined'){//browser\n\t\t\t\tvar reader=new FileReader();\n\t\t\t\treader.onload=function(e){parse(e.target.result, inputFile.name.replace(/\\.docx$/i,''))}\n\t\t\t\treader.readAsArrayBuffer(inputFile);\n\t\t\t}else{//server side\n\t\t\t\tvar a=require;\n\t\t\t\ta('fs').readFile(inputFile,function(error, data){\n\t\t\t\t\tif(error)\n\t\t\t\t\t\treject(error);\n\t\t\t\t\telse if(data){\n\t\t\t\t\t\tparse(data, inputFile.split(/[\\/\\\\]/).pop().replace(/\\.docx$/i,''))\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t}\n\t\t})\n\t}\n\n\tstatic get factory(){return null}\n}\n"]}